@model TimeServed.Models.ViewModels.AttorneyReport

@{
    ViewData["Title"] = "Hours";
}
    <head>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js" type="text/javascript"></script>
        <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    </head>
    <body>
        <h1>Hours worked</h1>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        Attorney
                    </th>
                    <th>
                        Total hours(h/m/s)
                    </th>
                    <th>
                        Monthly hours (h/m/s)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.attorneys)
                {
                    List<TimeSpan> baseTimeSpan = new List<TimeSpan>();
                    var totalTime = TimeSpan.Zero;
                    var monthlyTime = TimeSpan.Zero;
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        @foreach (var item2 in Model.appointments.Where(a => a.ApplicationUserId == item.Id))
                        {
                            totalTime = totalTime + item2.TimeSpent();
                        }
                        <td>
                            @totalTime.Hours:@totalTime.Minutes:@totalTime.Seconds
                        </td>
                        @foreach (var item2 in Model.appointments.Where(a => a.ApplicationUserId == item.Id && a.VisitDate.Month == DateTime.Now.Month))
                        {
                            monthlyTime = monthlyTime + item2.TimeSpent();
                        }
                        <td>
                            @monthlyTime.Hours:@monthlyTime.Minutes:@monthlyTime.Seconds
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div Style="font-family: Corbel; font-size: small ;text-align:center " class="row">
            <div style="width:100%;height:100%">
                <canvas id="myChart" style="padding: 0;margin: auto;display: block; "> </canvas>
            </div>
        </div>
     
    </body>
    <script>
    var appArray = @Html.Raw(Json.Serialize(ViewBag.apps));
        var attArray = @Html.Raw(Json.Serialize(ViewBag.atts));
        console.log(appArray);
        
    var dataT = {
            labels: attArray,
            datasets: [{
                label: "Attorneys",
                data: appArray.FirstName,
                fill: false,
                backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                borderWidth: 1
                }]
            };
    var ctx = $("#myChart").get(0).getContext("2d");
    var myNewChart = new Chart(ctx, {
            type: 'bar',
            data: dataT,
            options: {
                responsive: true,
                title: { display: true, text: 'Attorney Hours' },
                legend: { position: 'bottom' },
                scales: {
                xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }],
                yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 40, beginAtZero: true } }]
            },
        }
        });
    
    </script>
